/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/login",{

/***/ "./node_modules/invariant/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/invariant/browser.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (true) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxJQUFxQztBQUMzQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywwQkFBMEI7QUFDckU7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzP2UzYWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/invariant/browser.js\n"));

/***/ }),

/***/ "./src/components/form/SignupForm.js":
/*!*******************************************!*\
  !*** ./src/components/form/SignupForm.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SignupForm; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! formik */ \"./node_modules/formik/dist/formik.esm.js\");\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! yup */ \"./node_modules/yup/index.esm.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Button,Checkbox,FormControl,FormControlLabel,FormHelperText,Step,StepLabel,Stepper,TextField!=!@mui/material */ \"__barrel_optimize__?names=Box,Button,Checkbox,FormControl,FormControlLabel,FormHelperText,Step,StepLabel,Stepper,TextField!=!./node_modules/@mui/material/index.js\");\n/* harmony import */ var _styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../styles/components/signupform.module.css */ \"./src/styles/components/signupform.module.css\");\n/* harmony import */ var _styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! framer-motion */ \"./node_modules/framer-motion/dist/es/index.mjs\");\n/* harmony import */ var react_input_mask__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-input-mask */ \"./node_modules/react-input-mask/index.js\");\n/* harmony import */ var react_input_mask__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_input_mask__WEBPACK_IMPORTED_MODULE_3__);\nvar _s = $RefreshSig$();\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _regeneratorRuntime() {\n    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n    _regeneratorRuntime = function _regeneratorRuntime() {\n        return e;\n    };\n    var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(t, e, r) {\n        t[e] = r.value;\n    }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\";\n    function define(t, e, r) {\n        return Object.defineProperty(t, e, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), t[e];\n    }\n    try {\n        define({}, \"\");\n    } catch (t) {\n        define = function define(t, e, r) {\n            return t[e] = r;\n        };\n    }\n    function wrap(t, e, r, n) {\n        var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []);\n        return o(a, \"_invoke\", {\n            value: makeInvokeMethod(t, r, c)\n        }), a;\n    }\n    function tryCatch(t, e, r) {\n        try {\n            return {\n                type: \"normal\",\n                arg: t.call(e, r)\n            };\n        } catch (t) {\n            return {\n                type: \"throw\",\n                arg: t\n            };\n        }\n    }\n    e.wrap = wrap;\n    var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    var p = {};\n    define(p, a, function() {\n        return this;\n    });\n    var d = Object.getPrototypeOf, v = d && d(d(values([])));\n    v && v !== r && n.call(v, a) && (p = v);\n    var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n    function defineIteratorMethods(t) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(e) {\n            define(t, e, function(t) {\n                return this._invoke(e, t);\n            });\n        });\n    }\n    function AsyncIterator(t, e) {\n        function invoke(r, o, i, a) {\n            var c = tryCatch(t[r], t, o);\n            if (\"throw\" !== c.type) {\n                var u = c.arg, h = u.value;\n                return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function(t) {\n                    invoke(\"next\", t, i, a);\n                }, function(t) {\n                    invoke(\"throw\", t, i, a);\n                }) : e.resolve(h).then(function(t) {\n                    u.value = t, i(u);\n                }, function(t) {\n                    return invoke(\"throw\", t, i, a);\n                });\n            }\n            a(c.arg);\n        }\n        var r;\n        o(this, \"_invoke\", {\n            value: function value(t, n) {\n                function callInvokeWithMethodAndArg() {\n                    return new e(function(e, r) {\n                        invoke(t, n, e, r);\n                    });\n                }\n                return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    }\n    function makeInvokeMethod(e, r, n) {\n        var o = h;\n        return function(i, a) {\n            if (o === f) throw Error(\"Generator is already running\");\n            if (o === s) {\n                if (\"throw\" === i) throw a;\n                return {\n                    value: t,\n                    done: !0\n                };\n            }\n            for(n.method = i, n.arg = a;;){\n                var c = n.delegate;\n                if (c) {\n                    var u = maybeInvokeDelegate(c, n);\n                    if (u) {\n                        if (u === y) continue;\n                        return u;\n                    }\n                }\n                if (\"next\" === n.method) n.sent = n._sent = n.arg;\n                else if (\"throw\" === n.method) {\n                    if (o === h) throw o = s, n.arg;\n                    n.dispatchException(n.arg);\n                } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n                o = f;\n                var p = tryCatch(e, r, n);\n                if (\"normal\" === p.type) {\n                    if (o = n.done ? s : l, p.arg === y) continue;\n                    return {\n                        value: p.arg,\n                        done: n.done\n                    };\n                }\n                \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n            }\n        };\n    }\n    function maybeInvokeDelegate(e, r) {\n        var n = r.method, o = e.iterator[n];\n        if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n        var i = tryCatch(o, e.iterator, r.arg);\n        if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n        var a = i.arg;\n        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n    }\n    function pushTryEntry(t) {\n        var e = {\n            tryLoc: t[0]\n        };\n        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n    }\n    function resetTryEntry(t) {\n        var e = t.completion || {};\n        e.type = \"normal\", delete e.arg, t.completion = e;\n    }\n    function Context(t) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], t.forEach(pushTryEntry, this), this.reset(!0);\n    }\n    function values(e) {\n        if (e || \"\" === e) {\n            var r = e[a];\n            if (r) return r.call(e);\n            if (\"function\" == typeof e.next) return e;\n            if (!isNaN(e.length)) {\n                var o = -1, i = function next() {\n                    for(; ++o < e.length;)if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n                    return next.value = t, next.done = !0, next;\n                };\n                return i.next = i;\n            }\n        }\n        throw new TypeError(_typeof(e) + \" is not iterable\");\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), o(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function(t) {\n        var e = \"function\" == typeof t && t.constructor;\n        return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n    }, e.mark = function(t) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n    }, e.awrap = function(t) {\n        return {\n            __await: t\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {\n        return this;\n    }), e.AsyncIterator = AsyncIterator, e.async = function(t, r, n, o, i) {\n        void 0 === i && (i = Promise);\n        var a = new AsyncIterator(wrap(t, r, n, o), i);\n        return e.isGeneratorFunction(r) ? a : a.next().then(function(t) {\n            return t.done ? t.value : a.next();\n        });\n    }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function() {\n        return this;\n    }), define(g, \"toString\", function() {\n        return \"[object Generator]\";\n    }), e.keys = function(t) {\n        var e = Object(t), r = [];\n        for(var n in e)r.push(n);\n        return r.reverse(), function next() {\n            for(; r.length;){\n                var t = r.pop();\n                if (t in e) return next.value = t, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, e.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(e) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for(var r in this)\"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n        },\n        stop: function stop() {\n            this.done = !0;\n            var t = this.tryEntries[0].completion;\n            if (\"throw\" === t.type) throw t.arg;\n            return this.rval;\n        },\n        dispatchException: function dispatchException(e) {\n            if (this.done) throw e;\n            var r = this;\n            function handle(n, o) {\n                return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n            }\n            for(var o = this.tryEntries.length - 1; o >= 0; --o){\n                var i = this.tryEntries[o], a = i.completion;\n                if (\"root\" === i.tryLoc) return handle(\"end\");\n                if (i.tryLoc <= this.prev) {\n                    var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\");\n                    if (c && u) {\n                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n                    } else if (c) {\n                        if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n                    } else {\n                        if (!u) throw Error(\"try statement without catch or finally\");\n                        if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function abrupt(t, e) {\n            for(var r = this.tryEntries.length - 1; r >= 0; --r){\n                var o = this.tryEntries[r];\n                if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n                    var i = o;\n                    break;\n                }\n            }\n            i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n            var a = i ? i.completion : {};\n            return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n        },\n        complete: function complete(t, e) {\n            if (\"throw\" === t.type) throw t.arg;\n            return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n        },\n        finish: function finish(t) {\n            for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                var r = this.tryEntries[e];\n                if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n            }\n        },\n        \"catch\": function _catch(t) {\n            for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                var r = this.tryEntries[e];\n                if (r.tryLoc === t) {\n                    var n = r.completion;\n                    if (\"throw\" === n.type) {\n                        var o = n.arg;\n                        resetTryEntry(r);\n                    }\n                    return o;\n                }\n            }\n            throw Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(e, r, n) {\n            return this.delegate = {\n                iterator: values(e),\n                resultName: r,\n                nextLoc: n\n            }, \"next\" === this.method && (this.arg = t), y;\n        }\n    }, e;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\n\n\n\n\n\n\nvar validationSchema = yup__WEBPACK_IMPORTED_MODULE_1__.object({\n    nome: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Nome completo\").required(\"Campo obrigat\\xf3rio\"),\n    telefonePessoal: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Telefone\").required(\"Campo obrigat\\xf3rio\"),\n    emailPessoal: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"E-mail\").email(\"Insira um e-mail v\\xe1lido\").matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, \"Insira um e-mail v\\xe1lido\").required(\"Campo obrigat\\xf3rio\"),\n    dataNascimento: yup__WEBPACK_IMPORTED_MODULE_1__.date().required(\"Campo obrigat\\xf3rio\"),\n    cpf: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"CPF\").required(\"Campo obrigat\\xf3rio\"),\n    senha: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Senha\").min(5, \"Senha deve conter pelo menos 5 d\\xedgitos\").required(\"Campo obrigat\\xf3rio\"),\n    confisenha: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Confirmar senha\").oneOf([\n        yup__WEBPACK_IMPORTED_MODULE_1__.ref(\"senha\"),\n        null\n    ], \"Senhas diferentes\").required(\"Campo obrigat\\xf3rio\"),\n    possuiEmpresa: yup__WEBPACK_IMPORTED_MODULE_1__.boolean(\"Possui empresa?\").required(\"Campo obrigat\\xf3rio\"),\n    cnpj: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"CNPJ\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    nomeFantasia: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Nome fantasia\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    razaoSocial: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Raz\\xe3o social\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    atividadesExercidas: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Atividades exercidas\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    capitalSocial: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Capital social\").typeError(\"Capital social deve ser um n\\xfamero\").test(\"min-value\", \"O valor m\\xednimo \\xe9 R$ 100,00\", function(value) {\n        var numericValue = Number(value.replace(/[^0-9,-]+/g, \"\").replace(\",\", \".\"));\n        return numericValue >= 100;\n    }).required(\"Campo obrigat\\xf3rio\"),\n    cep: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"CEP\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    endereco: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Endere\\xe7o\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    numeroEmpresa: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"N\\xfamero\").matches(/(\\(?\\d{2}\\)?\\s)?(\\d{4,5}-\\d{4})/, \"Insira um n\\xfamero de telefone v\\xe1lido\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    complementoEmpresa: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Complemento\"),\n    emailEmpresa: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"E-mail\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    telefoneEmpresa: yup__WEBPACK_IMPORTED_MODULE_1__.string(\"Telefone\").matches(/(\\(?\\d{2}\\)?\\s)?(\\d{4,5}-\\d{4})/, \"Insira um n\\xfamero de telefone v\\xe1lido\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Campo obrigat\\xf3rio\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    qntSocios: yup__WEBPACK_IMPORTED_MODULE_1__.number().min(1, \"Quantidade de s\\xf3cios deve ser maior ou igual a 1\").when(\"possuiEmpresa\", {\n        is: true,\n        then: function then() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Quantidade de s\\xf3cios \\xe9 obrigat\\xf3ria\");\n        },\n        otherwise: function otherwise() {\n            return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n        }\n    }),\n    socios: yup__WEBPACK_IMPORTED_MODULE_1__.array().of(yup__WEBPACK_IMPORTED_MODULE_1__.object().shape({\n        nomeSocio: yup__WEBPACK_IMPORTED_MODULE_1__.string().when(\"possuiEmpresa\", {\n            is: true,\n            then: function then() {\n                return yup__WEBPACK_IMPORTED_MODULE_1__.string().required(\"Nome do s\\xf3cio \\xe9 obrigat\\xf3rio\");\n            },\n            otherwise: function otherwise() {\n                return yup__WEBPACK_IMPORTED_MODULE_1__.string().notRequired();\n            }\n        })\n    }))\n});\nfunction SignupForm() {\n    _s();\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), _useState2 = _slicedToArray(_useState, 2), step = _useState2[0], setStep = _useState2[1];\n    var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\"), _useState4 = _slicedToArray(_useState3, 2), endereco = _useState4[0], setEndereco = _useState4[1];\n    var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\"), _useState6 = _slicedToArray(_useState5, 2), message = _useState6[0], setMessage = _useState6[1];\n    var formik = (0,formik__WEBPACK_IMPORTED_MODULE_4__.useFormik)({\n        initialValues: {\n            nome: \"\",\n            telefonePessoal: \"\",\n            emailPessoal: \"\",\n            dataNascimento: \"\",\n            cpf: \"\",\n            senha: \"\",\n            confisenha: \"\",\n            possuiEmpresa: false,\n            cnpj: \"\",\n            nomeFantasia: \"\",\n            razaoSocial: \"\",\n            atividadesExercidas: \"\",\n            capitalSocial: \"\",\n            cep: \"\",\n            endereco: \"\",\n            numeroEmpresa: \"\",\n            complementoEmpresa: \"\",\n            emailEmpresa: \"\",\n            telefoneEmpresa: \"\",\n            qntSocios: 1,\n            socios: []\n        },\n        validationSchema: validationSchema,\n        onSubmit: function() {\n            var _onSubmit = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee(values, _ref) {\n                var resetForm, response;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while(1)switch(_context.prev = _context.next){\n                        case 0:\n                            resetForm = _ref.resetForm;\n                            _context.prev = 1;\n                            _context.next = 4;\n                            return axios__WEBPACK_IMPORTED_MODULE_5__[\"default\"].post(\"https://api-login-self.vercel.app/signup\", values, {\n                                headers: {\n                                    \"Content-Type\": \"application/json\"\n                                }\n                            });\n                        case 4:\n                            response = _context.sent;\n                            setMessage(response.data.message);\n                            resetForm();\n                            _context.next = 12;\n                            break;\n                        case 9:\n                            _context.prev = 9;\n                            _context.t0 = _context[\"catch\"](1);\n                            setMessage(_context.t0.response.data.message);\n                        case 12:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }, _callee, null, [\n                    [\n                        1,\n                        9\n                    ]\n                ]);\n            }));\n            function onSubmit(_x, _x2) {\n                return _onSubmit.apply(this, arguments);\n            }\n            return onSubmit;\n        }()\n    });\n    var steps = [\n        \"Informa\\xe7\\xf5es Pessoais\",\n        \"Informa\\xe7\\xf5es Profissionais\"\n    ];\n    var handleNext = function handleNext() {\n        var currentStepErrors = Object.keys(formik.errors).filter(function(key) {\n            return formik.touched[key] && formik.errors[key];\n        });\n        if (currentStepErrors.length === 0) {\n            setStep(function(prevStep) {\n                return prevStep + 1;\n            });\n        }\n    };\n    var handleBack = function handleBack() {\n        setStep(function(prevStep) {\n            return prevStep - 1;\n        });\n    };\n    var fetchAddress = /*#__PURE__*/ function() {\n        var _ref2 = _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee2(cep) {\n            var response;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while(1)switch(_context2.prev = _context2.next){\n                    case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return axios__WEBPACK_IMPORTED_MODULE_5__[\"default\"].get(\"https://viacep.com.br/ws/\".concat(cep, \"/json/\"));\n                    case 3:\n                        response = _context2.sent;\n                        setEndereco(response.data.logradouro);\n                        formik.setFieldValue(\"endereco\", response.data.logradouro);\n                        _context2.next = 11;\n                        break;\n                    case 8:\n                        _context2.prev = 8;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        console.error(\"Erro ao buscar endere\\xe7o:\", _context2.t0);\n                    case 11:\n                    case \"end\":\n                        return _context2.stop();\n                }\n            }, _callee2, null, [\n                [\n                    0,\n                    8\n                ]\n            ]);\n        }));\n        return function fetchAddress(_x3) {\n            return _ref2.apply(this, arguments);\n        };\n    }();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(framer_motion__WEBPACK_IMPORTED_MODULE_6__.motion.div, {\n        className: (_styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2___default().signupform),\n        initial: {\n            opacity: 0,\n            x: -100\n        },\n        animate: {\n            opacity: 1,\n            x: 0\n        },\n        transition: {\n            duration: 0.5\n        }\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", {\n        style: {\n            marginBottom: \"20px\"\n        }\n    }, \"Preencha os dados abaixo e cadastre-se agora mesmo!\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Stepper, {\n        activeStep: step,\n        className: (_styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2___default().steps)\n    }, steps.map(function(label) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Step, {\n            key: label\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.StepLabel, null, label));\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"form\", {\n        onSubmit: formik.handleSubmit\n    }, step === 0 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Box, {\n        className: (_styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2___default().formulario)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"nome\",\n        name: \"nome\",\n        label: \"Nome Completo\",\n        autoComplete: \"username\",\n        variant: \"standard\",\n        value: formik.values.nome,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.nome && Boolean(formik.errors.nome),\n        helperText: formik.touched.nome && formik.errors.nome,\n        style: {\n            marginTop: \"10px\"\n        }\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react_input_mask__WEBPACK_IMPORTED_MODULE_3___default()), {\n        mask: function mask(value) {\n            return value.replace(/\\D/g, \"\").length === 11 ? \"(99) 99999-9999\" : \"(99) 9999-9999\";\n        },\n        value: formik.values.telefonePessoal,\n        onChange: formik.handleChange\n    }, function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n            id: \"telefonePessoal\",\n            name: \"telefonePessoal\",\n            label: \"Telefone\",\n            variant: \"standard\",\n            autoComplete: \"tel\",\n            value: formik.values.telefonePessoal,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            error: formik.touched.telefonePessoal && Boolean(formik.errors.telefonePessoal),\n            helperText: formik.touched.telefonePessoal && formik.errors.telefonePessoal\n        });\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"emailPessoal\",\n        name: \"emailPessoal\",\n        label: \"E-mail\",\n        autoComplete: \"email\",\n        variant: \"standard\",\n        value: formik.values.emailPessoal,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.emailPessoal && Boolean(formik.errors.emailPessoal),\n        helperText: formik.touched.emailPessoal && formik.errors.emailPessoal\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"dataNascimento\",\n        name: \"dataNascimento\",\n        label: \"Data de Nascimento\",\n        type: \"date\",\n        InputLabelProps: {\n            shrink: true\n        },\n        value: formik.values.dataNascimento,\n        onChange: formik.handleChange,\n        error: formik.touched.dataNascimento && Boolean(formik.errors.dataNascimento),\n        helperText: formik.touched.dataNascimento && formik.errors.dataNascimento,\n        style: {\n            marginTop: \"10px\"\n        }\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"cpf\",\n        name: \"cpf\",\n        label: \"CPF\",\n        value: formik.values.cpf,\n        onChange: formik.handleChange,\n        error: formik.touched.cpf && Boolean(formik.errors.cpf),\n        helperText: formik.touched.cpf && formik.errors.cpf\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"senha\",\n        name: \"senha\",\n        label: \"Senha\",\n        variant: \"standard\",\n        autoComplete: \"password\",\n        type: \"password\",\n        value: formik.values.senha,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.senha && Boolean(formik.errors.senha),\n        helperText: formik.touched.senha && formik.errors.senha\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"confisenha\",\n        name: \"confisenha\",\n        label: \"Confirme sua senha\",\n        variant: \"standard\",\n        autoComplete: \"password\",\n        type: \"password\",\n        value: formik.values.confisenha,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.confisenha && Boolean(formik.errors.confisenha),\n        helperText: formik.touched.confisenha && formik.errors.confisenha\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Button, {\n        onClick: handleNext,\n        style: {\n            alignItems: \"right\",\n            marginBottom: \"15px\"\n        }\n    }, \"Pr\\xf3ximo\")), step === 1 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Box, {\n        className: (_styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2___default().formulario)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.FormControl, {\n        component: \"fieldset\",\n        error: formik.touched.possuiEmpresa && Boolean(formik.errors.possuiEmpresa)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.FormControlLabel, {\n        control: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Checkbox, {\n            id: \"possuiEmpresa\",\n            name: \"possuiEmpresa\",\n            checked: formik.values.possuiEmpresa,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            color: \"primary\"\n        }),\n        label: \"J\\xe1 possuo empresa\"\n    }), formik.touched.possuiEmpresa && formik.errors.possuiEmpresa && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.FormHelperText, null, formik.errors.possuiEmpresa)), formik.values.possuiEmpresa && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react_input_mask__WEBPACK_IMPORTED_MODULE_3___default()), {\n        mask: \"99.999.999/9999-99\",\n        value: formik.values.cnpj,\n        onChange: formik.handleChange\n    }, function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n            id: \"cnpj\",\n            name: \"cnpj\",\n            label: \"CNPJ\",\n            error: formik.touched.cnpj && Boolean(formik.errors.cnpj),\n            helperText: formik.touched.cnpj && formik.errors.cnpj\n        });\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"nomeFantasia\",\n        name: \"nomeFantasia\",\n        label: \"Nome fantasia\",\n        value: formik.values.nomeFantasia,\n        onChange: formik.handleChange,\n        error: formik.touched.nomeFantasia && Boolean(formik.errors.nomeFantasia),\n        helperText: formik.touched.nomeFantasia && formik.errors.nomeFantasia\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"razaoSocial\",\n        name: \"razaoSocial\",\n        label: \"Raz\\xe3o social\",\n        value: formik.values.razaoSocial,\n        onChange: formik.handleChange,\n        error: formik.touched.razaoSocial && Boolean(formik.errors.razaoSocial),\n        helperText: formik.touched.razaoSocial && formik.errors.razaoSocial\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"atividadesExercidas\",\n        name: \"atividadesExercidas\",\n        label: \"Atividades exercidas\",\n        value: formik.values.atividadesExercidas,\n        onChange: formik.handleChange,\n        error: formik.touched.atividadesExercidas && Boolean(formik.errors.atividadesExercidas),\n        helperText: formik.touched.atividadesExercidas && formik.errors.atividadesExercidas\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react_input_mask__WEBPACK_IMPORTED_MODULE_3___default()), {\n        mask: \"\",\n        value: formik.values.capitalSocial,\n        onChange: function onChange(e) {\n            return formik.setFieldValue(\"capitalSocial\", formatCurrency(e.target.value));\n        }\n    }, function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n            id: \"capitalSocial\",\n            name: \"capitalSocial\",\n            label: \"Capital social\",\n            variant: \"standard\",\n            error: formik.touched.capitalSocial && Boolean(formik.errors.capitalSocial),\n            helperText: formik.touched.capitalSocial && formik.errors.capitalSocial\n        });\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"cep\",\n        name: \"cep\",\n        label: \"CEP\",\n        value: formik.values.cep,\n        onChange: function onChange(e) {\n            formik.handleChange(e);\n            fetchAddress(e.target.value);\n        },\n        onBlur: formik.handleBlur,\n        error: formik.touched.cep && Boolean(formik.errors.cep),\n        helperText: formik.touched.cep && formik.errors.cep,\n        style: {\n            marginTop: \"10px\"\n        }\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Box, {\n        className: (_styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2___default().endereco)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"endereco\",\n        name: \"endereco\",\n        label: \"Endere\\xe7o\",\n        value: endereco,\n        disabled: true,\n        error: formik.touched.endereco && Boolean(formik.errors.endereco),\n        helperText: formik.touched.endereco && formik.errors.endereco,\n        style: {\n            width: \"80%\"\n        }\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"numeroEmpresa\",\n        name: \"numeroEmpresa\",\n        label: \"N\\xfamero\",\n        variant: \"standard\",\n        value: formik.values.numeroEmpresa,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.numeroEmpresa && Boolean(formik.errors.numeroEmpresa),\n        helperText: formik.touched.numeroEmpresa && formik.errors.numeroEmpresa,\n        style: {\n            width: \"20%\"\n        }\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"complementoEmpresa\",\n        name: \"complementoEmpresa\",\n        label: \"Complemento\",\n        variant: \"standard\",\n        value: formik.values.complementoEmpresa,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.complementoEmpresa && Boolean(formik.errors.complementoEmpresa),\n        helperText: formik.touched.complementoEmpresa && formik.errors.complementoEmpresa\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"emailEmpresa\",\n        name: \"emailEmpresa\",\n        label: \"E-mail\",\n        variant: \"standard\",\n        value: formik.values.emailEmpresa,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.emailEmpresa && Boolean(formik.errors.emailEmpresa),\n        helperText: formik.touched.emailEmpresa && formik.errors.emailEmpresa\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"telefoneEmpresa\",\n        name: \"telefoneEmpresa\",\n        label: \"Telefone\",\n        variant: \"standard\",\n        value: formik.values.telefoneEmpresa,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.telefoneEmpresa && Boolean(formik.errors.telefoneEmpresa),\n        helperText: formik.touched.telefoneEmpresa && formik.errors.telefoneEmpresa\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n        id: \"qntSocios\",\n        name: \"qntSocios\",\n        label: \"Quantidade s\\xf3cios\",\n        variant: \"standard\",\n        value: formik.values.qntSocios,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.qntSocios && Boolean(formik.errors.qntSocios),\n        helperText: formik.touched.qntSocios && formik.errors.qntSocios,\n        style: {\n            width: \"20%\"\n        }\n    }), formik.values.qntSocios > 0 && _toConsumableArray(Array(Number(formik.values.qntSocios)).keys()).map(function(index) {\n        var _formik$values$socios, _formik$touched$socio, _formik$errors$socios, _formik$touched$socio2, _formik$errors$socios2;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Box, {\n            key: index\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.TextField, {\n            id: \"nome_socio\".concat(index),\n            name: \"socios[\".concat(index, \"].nome_socio\"),\n            label: \"Nome do \".concat(index + 1, \"\\xba s\\xf3cio\"),\n            variant: \"standard\",\n            value: ((_formik$values$socios = formik.values.socios[index]) === null || _formik$values$socios === void 0 ? void 0 : _formik$values$socios.nome_socio) || \"\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            error: formik.touched.socios && ((_formik$touched$socio = formik.touched.socios[index]) === null || _formik$touched$socio === void 0 ? void 0 : _formik$touched$socio.nome_socio) && Boolean((_formik$errors$socios = formik.errors.socios) === null || _formik$errors$socios === void 0 || (_formik$errors$socios = _formik$errors$socios[index]) === null || _formik$errors$socios === void 0 ? void 0 : _formik$errors$socios.nome_socio),\n            helperText: formik.touched.socios && ((_formik$touched$socio2 = formik.touched.socios[index]) === null || _formik$touched$socio2 === void 0 ? void 0 : _formik$touched$socio2.nome_socio) && ((_formik$errors$socios2 = formik.errors.socios) === null || _formik$errors$socios2 === void 0 || (_formik$errors$socios2 = _formik$errors$socios2[index]) === null || _formik$errors$socios2 === void 0 ? void 0 : _formik$errors$socios2.nome_socio),\n            style: {\n                marginTop: \"10px\"\n            }\n        }));\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Box, {\n        className: (_styles_components_signupform_module_css__WEBPACK_IMPORTED_MODULE_2___default().botoes)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Button, {\n        onClick: handleBack\n    }, \"Voltar\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_barrel_optimize_names_Box_Button_Checkbox_FormControl_FormControlLabel_FormHelperText_Step_StepLabel_Stepper_TextField_mui_material__WEBPACK_IMPORTED_MODULE_7__.Button, {\n        type: \"submit\"\n    }, \"Cadastrar\"))), message ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n        style: {\n            fontSize: \"0.84em\",\n            color: \"#202949\",\n            textAlign: \"left\"\n        }\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"strong\", null, message)) : \"\"));\n}\n_s(SignupForm, \"UJgb36zqHtSfftgcxDeoebSOnLg=\", false, function() {\n    return [\n        formik__WEBPACK_IMPORTED_MODULE_4__.useFormik\n    ];\n});\n_c = SignupForm;\n;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/form/SignupForm.js\n"));

/***/ }),

/***/ "./node_modules/react-input-mask/index.js":
/*!************************************************!*\
  !*** ./node_modules/react-input-mask/index.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("if (false) {} else {\n  module.exports = __webpack_require__(/*! ./lib/react-input-mask.development.js */ \"./node_modules/react-input-mask/lib/react-input-mask.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaW5wdXQtbWFzay9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsd0pBQWlFO0FBQ25FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pbnB1dC1tYXNrL2luZGV4LmpzPzZjNWEiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9yZWFjdC1pbnB1dC1tYXNrLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL3JlYWN0LWlucHV0LW1hc2suZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-input-mask/index.js\n"));

/***/ }),

/***/ "./node_modules/react-input-mask/lib/react-input-mask.development.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-input-mask/lib/react-input-mask.development.js ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = _interopDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar reactDom = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\nvar invariant = _interopDefault(__webpack_require__(/*! invariant */ \"./node_modules/invariant/browser.js\"));\nvar warning = _interopDefault(__webpack_require__(/*! warning */ \"./node_modules/warning/warning.js\"));\n\nfunction _defaults2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\n\nfunction parseMask (mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n      formatChars = maskOptions.formatChars;\n\n  if (!character) {\n    return false;\n  }\n\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n\n    return value.length;\n  }\n\n  var filledLength = prefix.length;\n\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n\n  return filledLength;\n}\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n\n    return value;\n  }\n\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n\n  return value;\n}\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n\n    return maskChar;\n  }).join('');\n}\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (!isAllowed) {\n      return true;\n    }\n\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\n\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n      prefix = maskOptions.prefix,\n      lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n\n  newValue = previousValue;\n\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n\n  newValue = formatValue(maskOptions, newValue);\n\n  if (!enteredString) {\n    enteredString = null;\n  }\n\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\n\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\n\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\n\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n\n  return deferFn(fn);\n}\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\n\nvar InputElement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n\n  function InputElement(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n\n      return input;\n    };\n\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return null;\n      }\n\n      return input.value;\n    };\n\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return;\n      }\n\n      _this.value = value;\n      input.value = value;\n    };\n\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var input = _this.getInputDOMNode();\n\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n\n      if (!input || !isFocused) {\n        return;\n      }\n\n      var _options = options,\n          deferred = _options.deferred;\n\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n\n      return getInputSelection(input);\n    };\n\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n          mask = _this$maskOptions.mask,\n          maskChar = _this$maskOptions.maskChar,\n          permanents = _this$maskOptions.permanents,\n          formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          beforePasteState = _assertThisInitialize.beforePasteState;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          previousSelection = _assertThisInitialize2.previousSelection;\n\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n\n      var value = _this.getInputValue();\n\n      var previousValue = _this.value;\n\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n\n      _this.setInputValue(newValue);\n\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n          mask = _this$maskOptions2.mask,\n          prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n\n          var isInputValueChanged = newValue !== _this.getInputValue();\n\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n\n        _this.runSaveSelectionLoop();\n      }\n\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n\n      _this.stopSaveSelectionLoop();\n\n      _this.focused = false;\n\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n\n        var isInputValueChanged = newValue !== _this.getInputValue();\n\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n\n          if (!_this.focused) {\n            return;\n          }\n\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n\n        _this.setInputValue('');\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n\n    var _mask = props.mask,\n        _maskChar = props.maskChar,\n        _formatChars = props.formatChars,\n        _alwaysShowMask = props.alwaysShowMask,\n        _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    if (_value == null) {\n      _value = defaultValue;\n    }\n\n    var _newValue = getStringValue(_value);\n\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n\n        oldValue = getStringValue(oldValue);\n\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n\n        _newValue = modifiedValue.value;\n      }\n    }\n\n    _this.value = _newValue;\n    return _this;\n  }\n\n  var _proto = InputElement.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n        beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        mask = _this$props.mask,\n        maskChar = _this$props.maskChar,\n        formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n\n    var isSelectionChanged = false;\n\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n\n    this.stopSaveSelectionLoop();\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        mask = _this$props2.mask,\n        alwaysShowMask = _this$props2.alwaysShowMask,\n        maskChar = _this$props2.maskChar,\n        formatChars = _this$props2.formatChars,\n        inputRef = _this$props2.inputRef,\n        beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n        children = _this$props2.children,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n\n    var inputElement;\n     true ? warning( // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : 0;\n\n    if (children) {\n      !isFunction(children) ?  true ? invariant(false, 'react-input-mask: children must be a function') : 0 : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n\n      var childrenProps = _extends({}, restProps);\n\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ?  true ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : 0 : void 0;\n       true ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n\n  return InputElement;\n}(React.Component);\n\nmodule.exports = InputElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-input-mask/lib/react-input-mask.development.js\n"));

/***/ }),

/***/ "./node_modules/warning/warning.js":
/*!*****************************************!*\
  !*** ./node_modules/warning/warning.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = \"development\" !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2FybmluZy93YXJuaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxhQUFvQjs7QUFFbEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsV0FBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsV0FBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvd2FybmluZy93YXJuaW5nLmpzPzgxZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMSA/IGxlbiAtIDEgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAxOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDFdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/warning/warning.js\n"));

/***/ })

});